import { ColorRGBA } from "./rgba";
/**
 * Represents a color of color type `ColorType.GRAY_SCALE_A`.
 *
 * @see ColorType
 */
export declare type ColorGrayScaleAlpha = [number, number] & {
    gray: number;
    a: number;
};
/**
 * Create a new color of type `gray scale` with alpha channel.
 *
 * @param gray The value for the `gray` part of the color.
 * @param a The value for the alpha channel part of the color.
 *
 * @return The color in gray scale with alpha channel representation.
 */
export declare function colorGrayScaleAlpha(gray: number, a: number): ColorGrayScaleAlpha;
/**
 * Checks if the given parameter is a color of type `ColorGrayScaleA`.
 *
 * @param color The input to check.
 *
 * @return `true` if `color` was of type `ColorGrayScaleA` and `false` otherwise.
 */
export declare function isColorGrayScaleAlpha(color: any): color is ColorGrayScaleAlpha;
/**
 * Converts a color of type `ColorGrayScaleAlpha` to `ColorRGBA`.
 *
 * @param color The color to convert.
 *
 * @return The converted color in rgba format.
 */
export declare function convertGrayScaleAlphaToRGBA(grayScaleAlpha: ColorGrayScaleAlpha): ColorRGBA;
